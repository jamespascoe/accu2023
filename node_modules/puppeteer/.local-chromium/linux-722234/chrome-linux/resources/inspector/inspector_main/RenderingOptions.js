export class RenderingOptionsView extends UI.VBox{constructor(){super(true);this.registerRequiredCSS('inspector_main/renderingOptions.css');this._appendCheckbox(ls`Paint flashing`,ls`Highlights areas of the page (green) that need to be repainted. May not be suitable for people prone to photosensitive epilepsy.`,Common.moduleSetting('showPaintRects'));this._appendCheckbox(ls`Layout Shift Regions`,ls`Highlights areas of the page (blue) that were shifted. May not be suitable for people prone to photosensitive epilepsy.`,Common.moduleSetting('showLayoutShiftRegions'));this._appendCheckbox(ls`Layer borders`,ls`Shows layer borders (orange/olive) and tiles (cyan).`,Common.moduleSetting('showDebugBorders'));this._appendCheckbox(ls`FPS meter`,ls`Plots frames per second, frame rate distribution, and GPU memory.`,Common.moduleSetting('showFPSCounter'));this._appendCheckbox(ls`Scrolling performance issues`,ls`Highlights elements (teal) that can slow down scrolling, including touch & wheel event handlers and other main-thread scrolling situations.`,Common.moduleSetting('showScrollBottleneckRects'));this._appendCheckbox(ls`Highlight ad frames`,ls`Highlights frames (red) detected to be ads.`,Common.moduleSetting('showAdHighlights'));this._appendCheckbox(ls`Hit-test borders`,ls`Shows borders around hit-test regions.`,Common.moduleSetting('showHitTestBorders'));this.contentElement.createChild('div').classList.add('panel-section-separator');this._appendSelect(ls`Forces media type for testing print and screen styles`,Common.moduleSetting('emulatedCSSMedia'));this._appendSelect(ls`Forces CSS prefers-color-scheme media feature`,Common.moduleSetting('emulatedCSSMediaFeaturePrefersColorScheme'));this._appendSelect(ls`Forces CSS prefers-reduced-motion media feature`,Common.moduleSetting('emulatedCSSMediaFeaturePrefersReducedMotion'));}
_appendCheckbox(label,subtitle,setting){const checkboxLabel=UI.CheckboxLabel.create(label,false,subtitle);UI.SettingsUI.bindCheckbox(checkboxLabel.checkboxElement,setting);this.contentElement.appendChild(checkboxLabel);}
_appendSelect(label,setting){const control=UI.SettingsUI.createControlForSetting(setting,label);if(control){this.contentElement.appendChild(control);}}}
self.InspectorMain=self.InspectorMain||{};InspectorMain=InspectorMain||{};InspectorMain.RenderingOptionsView=RenderingOptionsView;