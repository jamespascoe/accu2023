export const calculateInputPortXY=portIndex=>{const y=WebAudio.GraphVisualizer.GraphStyles.InputPortRadius+
WebAudio.GraphVisualizer.GraphStyles.LeftSideTopPadding+
portIndex*WebAudio.GraphVisualizer.GraphStyles.TotalInputPortHeight;return{x:0,y:y};};export const calculateOutputPortXY=(portIndex,nodeSize,numberOfOutputs)=>{const{width,height}=nodeSize;const outputPortY=(height/2)+
(2*portIndex-numberOfOutputs+1)*WebAudio.GraphVisualizer.GraphStyles.TotalOutputPortHeight/2;return{x:width,y:outputPortY};};export const calculateParamPortXY=(portIndex,offsetY)=>{const paramPortY=offsetY+WebAudio.GraphVisualizer.GraphStyles.TotalParamPortHeight*(portIndex+1)-
WebAudio.GraphVisualizer.GraphStyles.AudioParamRadius;return{x:0,y:paramPortY};};self.WebAudio=self.WebAudio||{};WebAudio=WebAudio||{};WebAudio.GraphVisualizer=WebAudio.GraphVisualizer||{};WebAudio.GraphVisualizer.NodeRendererUtility=WebAudio.GraphVisualizer.NodeRendererUtility||{};WebAudio.GraphVisualizer.NodeRendererUtility.calculateInputPortXY=calculateInputPortXY;WebAudio.GraphVisualizer.NodeRendererUtility.calculateOutputPortXY=calculateOutputPortXY;WebAudio.GraphVisualizer.NodeRendererUtility.calculateParamPortXY=calculateParamPortXY;